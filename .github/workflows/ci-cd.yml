name: CI-CD Pipeline

on:
  push:
    branches:
      - master   # changed from main â†’ master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true   # allows pushing later

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build JAR with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Build Docker image
      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-gke:${{ github.sha }} .

      # Step 5: Authenticate Docker with GCP
      - name: Authenticate Docker to GCP
        run: echo "${{ secrets.GCP_SA_KEY }}" | docker login -u _json_key --password-stdin https://gcr.io

      # Step 6: Push Docker image
      - name: Push Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-gke:${{ github.sha }}

      # Step 7: Update Kubernetes manifest with new image
      - name: Update K8s manifest
        run: |
          sed -i "s|image:.*|image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-gke:${{ github.sha }}|" k8s/deployment.yaml

      # Step 8: Commit and push manifest back to repo
      - name: Commit and push updated manifest
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/deployment.yaml
          git commit -m "Update manifest with new image: ${{ github.sha }}" || echo "No changes to commit"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Set up gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Step 10: Get GKE credentials
      - name: Get GKE credentials
        run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GCP_ZONE }}

      # Step 11: Deploy to GKE
      - name: Deploy to GKE
        run: kubectl apply -f k8s/

